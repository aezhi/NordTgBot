import asyncio

from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from bot.config import config
from bot.utils.log import logger

user_router = Router()


@user_router.message(Command('report'))
async def report_chat_message(message: Message):
    try:
        if not message.reply_to_message:
            sent_message = await message.reply('‚ö†Ô∏è –í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è!')

            await asyncio.sleep(10)
            await sent_message.delete()
            await message.delete()
            return

        reporter = message.from_user
        reported_user = message.reply_to_message.from_user

        reporter_user_name = f'@{reporter.username}' if reporter.username else f'<b>{reporter.full_name}</b>'
        reported_user_name = f'@{reported_user.username}' if reported_user.username else f'<b>{reported_user.full_name}</b>'

        report_text = (
            f'üö® <b>–ñ–∞–ª–æ–±–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n'
            f'üë§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> {reported_user_name} (ID: {reported_user.id})\n'
            f'üì© <b>–¢–µ–∫—Å—Ç:</b> {message.reply_to_message.text}\n'
            f'üÜî <b>–ñ–∞–ª–æ–±—É –ø–æ–¥–∞–ª:</b> {reporter_user_name} (ID: {reporter.id})'
        )

        await message.bot.send_message(config.ADMIN_GROUP_ID, report_text)
        await message.reply('‚úÖ –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.')

    except Exception as e:
        logger.error(e)


@user_router.message(Command('rules'))
async def send_rules_message(message: Message):
    rules_text = (
        'üìú *–ü—Ä–∞–≤–∏–ª–∞ Telegram-–∫–∞–Ω–∞–ª–∞*\n\n'
        'üö´ *–ó–∞–ø—Ä–µ—â–µ–Ω–æ:*\n\n'
        'üîπ *–°–ø–∞–º –∏ —Ñ–ª—É–¥* ‚Äì –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è, '
        '—á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–∫–µ—Ä–æ–≤, –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏–ª–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤.\n\n'
        'üîπ *–†–µ–∫–ª–∞–º–∞ –∏ —Å—Å—ã–ª–∫–∏* –Ω–∞ –¥—Ä—É–≥–∏–µ Telegram-–∫–∞–Ω–∞–ª—ã –∏ —á–∞—Ç—ã –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n'
        'üîπ *–ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ, –≤—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ* –≤ –ª—é–±–æ–π —Ñ–æ—Ä–º–µ.\n\n'
        'üîπ *–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, —É–≥—Ä–æ–∑—ã, —à–∞–Ω—Ç–∞–∂* ‚Äì –ª–∏—á–Ω—ã–µ –Ω–∞–ø–∞–¥–∫–∏, —Ä–∞–∑–∂–∏–≥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤, '
        '–∞ —Ç–∞–∫–∂–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–º –∫–ª—é—á–µ.\n\n'
        'üîπ *NSFW-–∫–æ–Ω—Ç–µ–Ω—Ç* ‚Äì —Å—Ü–µ–Ω—ã –Ω–∞—Å–∏–ª–∏—è, —à–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç, –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞.\n\n'
        'üîπ */report abuse* ‚Äì –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /report –Ω–µ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é/–∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–µ–ª–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π.'
    )
    try:
        sent_message = await message.reply(rules_text, parse_mode='Markdown')

        await asyncio.sleep(30)
        await sent_message.delete()
        await message.delete()

    except Exception as e:
        logger.error(e)


@user_router.message(Command('help'))
async def send_help_message(message: Message):
    help_text = (
        'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –∫–∞–Ω–∞–ª–∞ *channel name*!\n\n'
        '‚ùì *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º*\n\n'
        'üîπ */rules* ‚Äì üìú –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∏–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏–π.\n\n'
        'üîπ */report* ‚Äì üö® –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∞–ª–æ–±—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, '
        '–∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∂–∞–ª–æ–±—É.\n\n'
        'üìå –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ @NordModernWarSuggestionsBot.'
    )

    try:
        sent_message = await message.reply(help_text, parse_mode='Markdown')

        await asyncio.sleep(20)
        await sent_message.delete()
        await message.delete()

    except Exception as e:
        logger.error(e)


@user_router.message()
async def handle_message(message: Message):
    pass
